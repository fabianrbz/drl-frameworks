# Hyperparameters for a simple DQN-style Cartpole agent. The hyperparameters
# chosen achieve reasonable performance.
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.agents.dqn.dqn_agent
import dopamine.replay_memory.circular_replay_buffer
import gin.tf.external_configurables

DQNAgent.observation_shape = (12, 16)
DQNAgent.observation_dtype = %gym_lib.CARTPOLE_OBSERVATION_DTYPE
DQNAgent.stack_size = %gym_lib.CARTPOLE_STACK_SIZE
#DQNAgent.network = @gym_lib.cartpole_dqn_network
DQNAgent.gamma = 0.99
DQNAgent.update_horizon = 1
DQNAgent.min_replay_history = 300
DQNAgent.update_period = 1
DQNAgent.target_update_period = 100
DQNAgent.epsilon_fn = @dqn_agent.identity_epsilon
DQNAgent.tf_device = '/cpu:*'  # use '/cpu:*' for non-GPU version
#DQNAgent.optimizer = @tf.train.RMSPropOptimizer()
DQNAgent.optimizer = @tf.train.AdamOptimizer()

tf.train.AdamOptimizer.learning_rate = 0.00025
tf.train.AdamOptimizer.epsilon = 0.0003125
#tf.train.RMSPropOptimizer.learning_rate = 0.00025
#tf.train.RMSPropOptimizer.decay = 0.95
#tf.train.RMSPropOptimizer.momentum = 0.0
#tf.train.RMSPropOptimizer.epsilon = 0.00001
#tf.train.RMSPropOptimizer.centered = True
DQNAgent.epsilon_eval = 0

create_gym_environment.environment_name = 'indexer'
create_gym_environment.version = 'v0'
create_agent.agent_name = 'dqn'
CheckpointRunner.create_environment_fn = @gym_lib.create_gym_environment
CheckpointRunner.num_iterations = 50
CheckpointRunner.training_steps = 1000
CheckpointRunner.evaluation_steps = 1000
CheckpointRunner.max_steps_per_episode = 20  # Default max episode length.
CheckpointRunner.checkpoint_freq = 0  # Checkpointing frequency.
#CheckpointRunner.inference_steps = 1000  #Measure runtime over this number of steps

WrappedReplayBuffer.replay_capacity = 50000
WrappedReplayBuffer.batch_size = 128
